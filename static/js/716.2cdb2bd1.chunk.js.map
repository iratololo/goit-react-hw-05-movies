{"version":3,"file":"static/js/716.2cdb2bd1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/LoadMoreBtn/LoadMoreBtn.module.css?7c53","components/LoadMoreBtn/LoadMoreBtn.jsx","webpack://react-homework-template/./src/components/Review/Review.module.css?3727","components/Review/Review.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","api/reviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"LoadMoreBtn_button__wacIM\"};","import css from \"./LoadMoreBtn.module.css\"\n\nconst LoadMoreBtn = ({fn}) => {\n  return (\n    <button className={css.button} type=\"button\" onClick={fn}>Load more</button>\n  )\n}\n\nexport default LoadMoreBtn","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Review_item__8gQhI\",\"name\":\"Review_name__UP6hB\",\"text\":\"Review_text__V5p6q\",\"button\":\"Review_button__mFW71\"};","import css from \"./Review.module.css\"\n\nconst Review = ({ data: { author, content }, showModal }) => {\n  \n  const seeMore = () => {\n    showModal({author, content})\n  }\n  \n  return (\n    <li className={css.item}>\n      <p className={css.name}>{author}</p>\n      <p className={css.text}>{content}</p>\n      <button onClick={seeMore} type=\"button\" className={css.button}>See more</button>\n    </li> \n  )\n}\n\nexport default Review","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__DJDMv\",\"content\":\"Modal_content__gGb69\",\"name\":\"Modal_name__d6D1e\",\"text\":\"Modal_text__KJZTz\"};","import { useEffect} from 'react';\n\nimport css from \"./Modal.module.css\"\n\nconst Modal = ({ data: { author, content }, closeModal }) => {\n    \n    useEffect(() => {  \n        const handleEsc = (e) => {\n        if (e.code === \"Escape\") {\n        closeModal()\n        }\n        }\n        document.addEventListener(\"keydown\", handleEsc)\n        return () => {\n            document.removeEventListener(\"keydown\",handleEsc)\n        }\n  }, [closeModal])\n\n    return (\n        <div onClick={closeModal} className={css.modal}>\n            <div className={css.content}>\n                <p className={css.name}>{author}</p>\n                <p className={css.text}>{content}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\"};","import instance from \"./api\";\n\nexport const getReviews = async(id) => {\n    const { data } = await instance(`/movie/${id}/reviews`);\n    return data;\n}","import { useParams } from \"react-router-dom\"\nimport { useEffect,useState } from \"react\";\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nimport Error from \"components/Error/Error\";\nimport Container from \"components/Container/Container\";\nimport LoadMoreBtn from \"components/LoadMoreBtn/LoadMoreBtn\";\nimport Review from \"components/Review/Review\";\nimport Modal from \"components/Modal/Modal\";\nimport css from \"./Reviews.module.css\"\n\nimport { getReviews } from \"api/reviews\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n\n    const [showReviews, setShowReviews] = useState([]);\n    const [currentPage, setcurrentPage] = useState(0);\n    const [load, setLoad] = useState(false);\n    const [end, setEnd] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [isEmpty, setIsEmpty] = useState(false);\n    const [isModal, setIsModal] = useState(false);\n    const [modalData, setModalData] = useState(null);\n\n    const perPage = 5;\n\n    const loadMore = () => {\n      setcurrentPage((prev) => prev + 1);\n      setLoad(true);\n    }\n\n    const showModal = (data) => {\n      setIsModal(true);\n      setModalData(data);\n    }\n\n    const closeModal = () => {\n      setIsModal(false);\n      setModalData(null);\n    }\n\n     useEffect(() => {\n      setLoad(false)\n      const start = perPage * (currentPage);\n      const end = start + perPage;\n      const getData = async () => {\n      try {\n        Loading.circle()\n        setError(\"\");\n        const { results } = await getReviews(movieId);\n        if (results.length === 0) {\n          setIsEmpty(true)\n          return;\n        } \n        if (!showReviews.length) {\n          setShowReviews(results.slice(start, end))\n        }\n        if (load) {\n          setShowReviews((prev)=> [...prev,...results.slice(start, end)])\n        }\n        if (showReviews.length >= results.length) {\n          setEnd(true)\n        }\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }finally {\n      Loading.remove(150);\n    }\n}\n\ngetData()\n     }, [movieId, showReviews, currentPage, load])\n  return (\n      <>\n        {isEmpty && <Error>There is no reviews</Error>}\n        {error && <Error>{error}</Error>}\n        {!isEmpty && <div>\n          <Container>\n            <ul className={css.list}>\n              {showReviews.map((item) => <Review key={item.id} data={item} showModal={showModal} />)}\n            </ul>\n            {showReviews.length >= perPage && !end && <LoadMoreBtn fn={loadMore} />}\n          </Container>\n        </div>}\n        {isModal && <Modal closeModal={closeModal} data={modalData} />}\n    </>\n  )\n}\n\nexport default Reviews"],"names":["_ref","fn","_jsx","className","css","type","onClick","children","_ref$data","data","author","content","showModal","_jsxs","closeModal","useEffect","handleEsc","e","code","document","addEventListener","removeEventListener","getReviews","_asyncToGenerator","_regeneratorRuntime","_callee","id","_yield$instance","_context","prev","next","instance","concat","sent","abrupt","stop","_x","apply","arguments","movieId","useParams","_useState","useState","_useState2","_slicedToArray","showReviews","setShowReviews","_useState3","_useState4","currentPage","setcurrentPage","_useState5","_useState6","load","setLoad","_useState7","_useState8","end","setEnd","_useState9","_useState10","error","setError","_useState11","_useState12","isEmpty","setIsEmpty","_useState13","_useState14","isModal","setIsModal","_useState15","_useState16","modalData","setModalData","start","getData","_yield$getReviews","results","Loading","length","slice","_toConsumableArray","t0","console","log","message","finish","_Fragment","Error","Container","map","item","Review","LoadMoreBtn","Modal"],"sourceRoot":""}